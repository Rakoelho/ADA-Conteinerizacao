services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - ./rabbitmq/config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq
    healthcheck:
      test: "rabbitmq-diagnostics check_port_connectivity --formatter json | tail -1 | grep -q '\"result\":\"ok\"'"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    networks:
      - rede_app
  
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379 
      - 8001:8001
    volumes:
      - ./redis/data/:/data
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes
      - REDISTIMESERIES_ARGS="RETENTION_POLICY=20"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rede_app
      
  minio:
    image: quay.io/minio/minio
    container_name: minio
    hostname: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rede_app
    command: server /data --console-address ":9001"
    
  app_validador:
    build:
      context: .
      dockerfile: Dockerfile_validador
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    networks:
      - rede_app
      
  app_producer:
    build:
      context: .
      dockerfile: Dockerfile_producer
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    networks:
      - rede_app
    command: sh -c "/bin/sleep 10 && python /apps/producer.py"
    
networks:
  rede_app:
    driver: bridge

#volumes:
#  minio_data:
#  redis_data:
#  rabbitmq_data: